pub(crate) fn log10_int(value: u32) -> u64 {
    (value as f64 * 10.0f64.log2()).ceil() as u64
}

#[cfg(test)]
mod tests {
    #[test]
    fn test_log10_int() {
        let results = (1..10).map(super::log10_int).collect::<Vec<_>>();
        assert_eq!(
            results,
            vec![
                4,  // 1, 2^4  =            16 >            10
                7,  // 2, 2^7  =           128 >           100
                10, // 3, 2^10 =          1024 >         1,000
                14, // 4, 2^14 =        16,384 >        10,000
                17, // 5, 2^17 =       131,072 >       100,000
                20, // 6, 2^20 =     1,048,576 >     1,000,000
                24, // 7, 2^24 =    16,777,216 >    10,000,000
                27, // 8, 2^27 =   134,217,728 >   100,000,000
                30, // 9, 2^30 = 1,073,741,824 > 1,000,000,000
            ]
        );
    }
}
